{"map":"{\"version\":3,\"sources\":[\"/Users/saran/Documents/WebProjects/NineTracks/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/Users/saran/Documents/WebProjects/NineTracks/src/components/Home/HomeAssets/background.png\",\"/Users/saran/Documents/WebProjects/NineTracks/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/Users/saran/Documents/WebProjects/NineTracks/src/components/Home/HomeAssets/Logo1.png\",\"/Users/saran/Documents/WebProjects/NineTracks/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/Users/saran/Documents/WebProjects/NineTracks/src/components/Home/HomeAssets/Logo2.png\",\"/Users/saran/Documents/WebProjects/NineTracks/src/components/Home/Home.js\",\"/Users/saran/Documents/WebProjects/NineTracks/src/components/App/App.js\",\"/Users/saran/Documents/WebProjects/NineTracks/src/serviceWorker.js\",\"/Users/saran/Documents/WebProjects/NineTracks/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"Home\",\"react_default\",\"a\",\"createElement\",\"className\",\"src\",\"logo1\",\"background\",\"Component\",\"App\",\"Switch\",\"Route\",\"path\",\"exact\",\"component\",\"Redirect\",\"to\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"BrowserRouter\",\"components_App_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8KCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4OC0BzBC,0LAjBP,OACIC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKE,IAAKC,EAAAA,KAEdL,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKE,IAAKE,EAAAA,IACVN,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,SAAA,CAAQC,UAAU,mBAAlB,WACAH,EAAAC,EAAAC,cAAA,SAAA,CAAQC,UAAU,mBAAlB,oBAZLI,EAAAA,YCUJC,mLATP,OACIR,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACIT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWd,IACjCC,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAUC,GAAG,cALXR,EAAAA,WCOES,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uECVNC,EAAAA,EAASC,OAAOtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,KAAevB,EAAAC,EAAAC,cAACsB,EAAD,OAAwBC,SAASC,eAAe,SDyHzE,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/background.803b5b70.png\\\";\",\"module.exports = __webpack_public_path__ + \\\"static/media/Logo1.dc125f8b.png\\\";\",\"module.exports = __webpack_public_path__ + \\\"static/media/Logo2.e084672b.png\\\";\",\"import React, {Component} from 'react';\\nimport \\\"./Home.css\\\";\\nimport background from \\\"./HomeAssets/background.png\\\"\\nimport logo1 from \\\"./HomeAssets/Logo1.png\\\"\\nimport logo2 from \\\"./HomeAssets/Logo2.png\\\"\\n\\nclass Home extends Component {\\n\\n    render() {\\n        return (\\n            <div className=\\\"home\\\">\\n                <div className=\\\"home-logo-container\\\">\\n                    <img src={logo1}/>\\n                </div>\\n                <div className=\\\"home-background-container\\\">\\n                    <img src={background}/>\\n                    <div className=\\\"home-buttons-container\\\">\\n                        <button className=\\\"material-button\\\">SIGN UP</button>\\n                        <button className=\\\"material-button\\\">LOG IN</button>\\n                    </div>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default Home;\",\"import React, {Component} from 'react';\\nimport './App.css';\\nimport {Redirect, Route, Switch} from \\\"react-router-dom\\\";\\nimport Home from \\\"../Home/Home\\\";\\n\\nclass App extends Component {\\n    render() {\\n        return (\\n            <Switch>\\n                <Route path=\\\"/\\\" exact component={Home}/>\\n                <Redirect to=\\\"/\\\"/>\\n            </Switch>\\n        );\\n    }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport './ninetracks.css';\\nimport App from './components/App/App';\\nimport * as serviceWorker from './serviceWorker';\\nimport {BrowserRouter} from \\\"react-router-dom\\\";\\n\\nReactDOM.render(<BrowserRouter><App/></BrowserRouter>, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{15:function(e,t,n){e.exports=n.p+\"static/media/background.803b5b70.png\"},16:function(e,t,n){e.exports=n.p+\"static/media/Logo1.dc125f8b.png\"},18:function(e,t,n){e.exports=n(35)},23:function(e,t,n){},25:function(e,t,n){},27:function(e,t,n){},29:function(e,t,n){},31:function(e,t,n){e.exports=n.p+\"static/media/Logo2.e084672b.png\"},35:function(e,t,n){\"use strict\";n.r(t);var a=n(1),o=n.n(a),c=n(14),r=n.n(c),i=(n(23),n(25),n(6)),s=n(7),l=n(11),m=n(8),u=n(12),b=(n(27),n(38)),p=n(39),d=n(36),h=(n(29),n(15)),f=n.n(h),g=n(16),E=n.n(g),v=(n(31),function(e){function t(){return Object(i.a)(this,t),Object(l.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"home\"},o.a.createElement(\"div\",{className:\"home-logo-container\"},o.a.createElement(\"img\",{src:E.a})),o.a.createElement(\"div\",{className:\"home-background-container\"},o.a.createElement(\"img\",{src:f.a}),o.a.createElement(\"div\",{className:\"home-buttons-container\"},o.a.createElement(\"button\",{className:\"material-button\"},\"SIGN UP\"),o.a.createElement(\"button\",{className:\"material-button\"},\"LOG IN\"))))}}]),t}(a.Component)),w=function(e){function t(){return Object(i.a)(this,t),Object(l.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){return o.a.createElement(b.a,null,o.a.createElement(p.a,{path:\"/\",exact:!0,component:v}),o.a.createElement(d.a,{to:\"/\"}))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var O=n(37);r.a.render(o.a.createElement(O.a,null,o.a.createElement(w,null)),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[18,2,1]]]);","extractedComments":[]}